# # # # # # # # # # # # # # # # # # # # # # # # 
# ########################################### #
# # INITIALIZING THE TROLL MODEL ON THE CRC # #
# ########################################### #
# # # # # # # # # # # # # # # # # # # # # # # #
# It is strongly recommended to have a dedicated TROLL directory in your CRC
# space for running the model, as well as a directory on your personal computer
# for organizin and storing model output.

####################
# TROLL input file #
####################
# The TROLL input file included in my TROLL repository, CR_liana.txt, was 
# generated by processing ERA5 reanalysis data for the climate inputs, and plant
# trait data from both the TRY database and the Powers lab at U Minnesota for
# the species-specific parameters. See the below link
# https://github.com/sethparker/TROLL/blob/liana/CR_liana.txt

# Critical parameters for analyzing modeled lianas include
# vox_la_max: maximum voxel LAD. 0.8-3m^2/m^3
# max_la_scheme: is vox_la_max applied to plants separately (0), or jointly (1)
# l_growth_scheme: top-down (0), random (1), homogenous (2), bottom-up (3)
# shed_median: determines likelihood of host shedding liana leaves. 0.007-0.05
# knock_median: determines likelihood of liana damaging host. 0.007-0.05

#####################################
# Generating batches of input files #
#####################################
# For ensemble analysis, parameters are simultaneously and uniformly varied
# across the full range of values established for each parameter. This process
# begins by generating a series of values to be used. In this example, I will
# vary vox_la_max and shed_median over a 50-run ensemble. The scripts used
# here can easily be adapted to vary other parameters, or for larger batches.

# # # # # # # # # # # # # # # #
# Generate replacement values #
# # # # # # # # # # # # # # # #
# I do this portion in R.

# Begin by setting you WD to your TROLL directory.
setwd("/Users/yourname/Documents/GradSchool/TROLL")

values <- runif(50, min = 0.8, max = 3) # Vox_LA_max
values <- cbind(values,runif(50, min = 0.007, max = 0.05)) # shed_median
write.csv(values,"values.txt")

# Now navigate to the TROLL directory, and open the file in Excel. 
# Delete the leftmost column, which is indexed, as well as the title
# "values" in the first row. Next, highlight all of the values, and
# drag them to be flush with cell A1. Now save the file. Excel will
# try to get you to save the file as a workbook. You can ignore that;
# we just need the .csv. The bash script I have set up for generating
# batches reads tab separated values, so we can convert our .csv file
# using the following bash commands in the TROLL directory.

$ cat values.txt | sed 's/,/    /g' > values.txt

# At this point, you are ready to migrate values.txt to your TROLL directory
# on the CRC. You can use the scp command for this, but it is honestly quicker
# to just type

$ cat values.txt

# and then copy/paste your values into a new values.txt in your CRC directory.
# Dealer's choice.

# # # # # # # # # # # # # # # # #
# Generate batch of input files #
# # # # # # # # # # # # # # # # #
# A bash script employing the awk command is used to replace values specified
# in CR_liana.txt with values from your values.txt. The awk script specifies
# which row of CR_liana.txt is to be replaced with the new values. In this case,
# we replace rows # and # of CR_liana.txt with columns 1 and 2 of values.txt

##############
# _FromData #
##############
# There are a number of options when running the TROLL model. One of the most 
# useful is the model's ability to initiate from provided forest conditions,
# or bare ground. If intializing from data, you will need to open the model
# and turn _FromData = 0 to _FromData = 1 before compiling, as well as supply
# an input file describing the structure of the forest you wish to simulate.
# The input file, forestconfig.txt, should be of the same format as follows

$ cat forestconfig.txt

### y x dbh(mm) species nhosts hosty hostx LCrownRad LcrownDep Ldbh
100 100 250 12
100 100 20 45 1 100 100 0.001 0.001 45

# The species code corresponds to the order in which the species appear in
# the input file.
